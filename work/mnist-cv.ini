[will]
LoadFile = save/save-25.txt
save_sign=MNIST
LoadNet = 0

Batch = 100
WorkType = 0
save_epoch=5

test_test = 1
test_train = 1
test_train_origin=0
test_test_origin=0

Trainepochs = 10
OutIter = 200
Testepoch = 1

LearnRateBase =1e-2
weight_decay = 5e-4
Momentum = 0.9

lr_adjust_method = fixed
lr_inter_set=300 1, 500 1
lr_scale_epoch=5,50
lr_scale_rate=1,0.01


Testmax = 1
USE_CUDA = 00

solver=sgd
#force_sgd_epoch=5

generate=0
diverse_beta=0.0

output_net=1

mp=1

cifa=1

[data_preparer]
library=..\x64\Release\will-mnist.dll
libraryd=..\x64\Debug\will-mnist.dll
library1=will-mnist
trans = 0
type=1
transpose = 0
random_diff=1
d_noise=0
remove59=0
flip=0
transpose=0
d_contrast=-0.2,0.2
d_brightness=-0.2,0.2
#fill_group=100

[data_preparer2]
library=..\x64\Release\will-mnist.dll
libraryd=..\x64\Debug\will-mnist.dll
library1=will-mnist
trans = 1
#path=qmnist
type=2
transpose = 0
remove59=0
#fill_group=100

[cifa]
structure=
    batch=100;
    act = active_relu;
    X = Matrix(28, 28, 1, batch);
    A1 = active(maxpool(conv(X, Matrix(5, 5, 1, 50)) + Matrix(1, 1, 50, 1), { 2, 2 }), act);
    A2 = active(maxpool(conv(A1, Matrix(5, 5, 50, 50)) + Matrix(1, 1, 50, 1), { 2, 2 }), act);
    A = sigmoid_ce(Matrix(10, 256) * active(Matrix(256, A2.row()) * A2 + Matrix(256, 1), act) + Matrix(10, 1));
    setXY(X, A);
    //addLoss(crossEntropy(A, Y));

structure1=
    auto batch=100;
    auto act = active_relu;
    auto X = Matrix(28, 28, 1, batch);
    auto W3 = Matrix(256, X.row());
    auto b3 = Matrix(256, 1);
    auto W4 = Matrix(10, 256);
    auto b4 = Matrix(10, 1);
    auto A = softmax_ce(W4 * active(W3 * X + b3,act) + b4);
    auto Y = Matrix(1 , 1, 10, batch);
    setXY(X, A);
    //addWeight(W3, b3, W4, b4);
    //addLoss(crossEntropy(A, Y));
